#!/usr/bin/make -f
# Generated automatically from debian/packages
# by yada v0.54, of Sun, 28 Oct 2007

DEB_HOST_ARCH        := $(shell dpkg-architecture -qDEB_HOST_ARCH 2>/dev/null)
DEB_HOST_ARCH_OS     := $(shell dpkg-architecture -qDEB_HOST_ARCH_OS 2>/dev/null)
DEB_HOST_ARCH_CPU    := $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU 2>/dev/null)
DEB_HOST_GNU_CPU     := $(shell dpkg-architecture -qDEB_HOST_GNU_CPU 2>/dev/null)
DEB_HOST_GNU_TYPE    := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE 2>/dev/null)
DEB_HOST_GNU_SYSTEM  := $(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM 2>/dev/null)

DEB_BUILD_ARCH       := $(shell dpkg-architecture -qDEB_BUILD_ARCH 2>/dev/null)
DEB_BUILD_ARCH_OS    := $(shell dpkg-architecture -qDEB_BUILD_ARCH_OS 2>/dev/null)
DEB_BUILD_ARCH_CPU   := $(shell dpkg-architecture -qDEB_BUILD_ARCH_CPU 2>/dev/null)
DEB_BUILD_GNU_CPU    := $(shell dpkg-architecture -qDEB_BUILD_GNU_CPU 2>/dev/null)
DEB_BUILD_GNU_TYPE   := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE 2>/dev/null)
DEB_BUILD_GNU_SYSTEM := $(shell dpkg-architecture -qDEB_BUILD_GNU_SYSTEM 2>/dev/null)

# Take account of old dpkg-architecture output.
ifeq ($(DEB_HOST_ARCH_CPU),)
  DEB_HOST_ARCH_CPU := $(DEB_HOST_GNU_CPU))
  ifeq ($(DEB_HOST_ARCH_CPU),i486)
    DEB_HOST_ARCH_OS := i386
  else
  ifeq ($(DEB_HOST_ARCH_CPU),x86_64)
    DEB_HOST_ARCH_OS := amd64
  endif
  endif
endif
ifeq ($(DEB_HOST_ARCH_OS),)
  DEB_HOST_ARCH_OS := $(subst -gnu,,$(DEB_HOST_GNU_SYSTEM))
  ifeq ($(DEB_HOST_ARCH_OS),gnu)
    DEB_HOST_ARCH_OS := hurd
  endif
endif
ifeq ($(DEB_BUILD_ARCH_CPU),)
  DEB_BUILD_ARCH_CPU := $(DEB_BUILD_GNU_CPU))
  ifeq ($(DEB_BUILD_ARCH_CPU),i486)
    DEB_BUILD_ARCH_OS := i386
  else
  ifeq ($(DEB_BUILD_ARCH_CPU),x86_64)
    DEB_BUILD_ARCH_OS := amd64
  endif
  endif
endif
ifeq ($(DEB_BUILD_ARCH_OS),)
  DEB_BUILD_ARCH_OS := $(subst -gnu,,$(DEB_BUILD_GNU_SYSTEM))
  ifeq ($(DEB_BUILD_ARCH_OS),gnu)
    DEB_BUILD_ARCH_OS := hurd
  endif
endif

LEFT_PARENTHESIS:=(
VERSION:=$(shell head -n1 debian/changelog | sed -e "s/^[0-9a-zA-Z.-]* $(LEFT_PARENTHESIS)//" -e "s/[^0-9a-zA-Z.:+~-].*//")

SHELL=/bin/bash

.PHONY: default
default:
	@echo "Specify a target:"; \
	echo " build              compile the package"; \
	echo " build-arch         compile the architecture-dependent package"; \
	echo " build-indep        compile the architecture-independent package"; \
	echo " binary             make all binary packages"; \
	echo " binary-arch        make all architecture-dependent binary packages"; \
	echo " binary-indep       make all architecture-independent binary packages"; \
	echo " clean              clean up the source package"; \
	echo; \
	echo " clean-install-tree clean up only under debian/"; \
	echo

# Build the package and prepare the install tree

.PHONY: build-only build
build-only: debian/build-stamp
build: build-only

.PHONY: build-arch-only build-arch
build-arch-only: debian/build-arch-stamp
build-arch: build-arch-only

.PHONY: build-indep-only build-indep
build-indep-only: debian/build-indep-stamp
build-indep: build-indep-only

# Make sure these rules and the control file are up-to-date

.PHONY: rules control templates
rules: debian/rules
debian/rules: $(shell which yada) debian/packages-tmp
	yada rebuild rules

control: debian/control
debian/control: $(shell which yada) debian/packages-tmp
	yada rebuild control

templates: debian/templates debian/po/POTFILES.in
debian/templates: $(shell which yada) debian/packages-tmp
	yada rebuild templates
debian/po/POTFILES.in: $(shell which yada) debian/packages-tmp
	yada rebuild templates

debian/build-stamp: debian/build-arch-stamp debian/build-indep-stamp
	@[ -f $(shell which yada) -a -f debian/rules ]
	yada patch "debian/patches/*.patch"
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export SOURCE="henplus" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'export JAVA_HOME=/usr/lib/jvm/java-gcj';\
	echo -E 'unset JAVA JAVAC JAVACMD CLASSPATH';\
	echo -E '';\
	echo -E 'ANT_OPTS="-Dbuild.compiler=extJavac"';\
	echo -E '';\
	echo -E 'ANT="ant $$ANT_OPTS"';\
	echo -E '';\
	echo -E 'ln -s /usr/share/java/libreadline-java.jar lib';\
	echo -E 'ln -s /usr/share/java/commons-cli.jar lib';\
	echo -E '';\
	echo -E 'jdk_version=`dpkg -s java-gcj-compat-dev | grep ^Version: | sed '\''s/.*: //'\''`';\
	echo -E 'LC_ALL=C $$ANT -Ddebian.version=$${VERSION##*-} -Ddebian.jdk=java-gcj-compat-dev -Ddebian.jdk.version=$$jdk_version jar';\
	echo -E '';\
	echo -E 'for pod in debian/man/*.pod; do';\
	echo -E '    eval pod2man $$(head -n1 $$pod | sed '\''s/^# pod2man //'\'') $$pod \';\
	echo -E '        > build/$$(basename $$pod .pod).$$(head -n1 $$pod | sed -e '\''s/.*--section=//'\'' -e '\''s/ .*//'\'')';\
	echo -E 'done') | /bin/bash
	touch debian/build-stamp

debian/build-arch-stamp:
	@[ -f $(shell which yada) -a -f debian/rules ]
	yada patch "debian/patches/*.patch"
	touch debian/build-arch-stamp

debian/build-indep-stamp: debian/build-arch-stamp
	@[ -f $(shell which yada) -a -f debian/rules ]
	yada patch "debian/patches/*.patch"
	touch debian/build-indep-stamp

.PHONY: install-tree
install-tree: install-tree-any
install-tree-any: \
	debian/tmp-henplus/DEBIAN/control

debian/tmp-henplus/DEBIAN/control: debian/build-stamp debian/control
	rm -rf debian/tmp-henplus
	umask 022 && install -d debian/tmp-henplus/DEBIAN
	install -d debian/tmp-henplus/usr/share/doc/henplus
	umask 022; yada generate copyright henplus \
	  > debian/tmp-henplus/usr/share/doc/henplus/copyright
	install -m 644 -p debian/changelog \
	  debian/tmp-henplus/usr/share/doc/henplus/changelog.Debian
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export ROOT="$$(pwd)/debian/tmp-henplus" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export CONTROL="$$(pwd)/debian/tmp-henplus/DEBIAN" \
	  && export PACKAGE="henplus" \
	  && export SOURCE="henplus" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'export JAVA_HOME=/usr/lib/jvm/java-gcj';\
	echo -E 'unset JAVA JAVAC JAVACMD CLASSPATH';\
	echo -E '';\
	echo -E 'ANT_OPTS="-Dbuild.compiler=extJavac"';\
	echo -E '';\
	echo -E 'ANT="ant $$ANT_OPTS"';\
	echo -E '';\
	echo -E 'LC_ALL=C $$ANT install -DDESTDIR=$$ROOT';\
	echo -E '';\
	echo -E 'yada install -script debian/scripts/henplus';\
	echo -E '';\
	echo -E 'yada install -man build/henplus.1') | /bin/bash
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export ROOT="$$(pwd)/debian/tmp-henplus" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export CONTROL="$$(pwd)/debian/tmp-henplus/DEBIAN" \
	  && export PACKAGE="henplus" \
	  && export SOURCE="henplus" \
	  && export VERSION="$(VERSION)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'yada perl';\
	echo -E 'yada python';\
	echo -E 'yada strip';\
	echo -E 'yada shlibdeps') | /bin/sh
	yada compress henplus
	yada generate maintscripts henplus
	find debian/tmp-henplus -type f -print \
	  | sed -n 's/^debian\/tmp-henplus\(\/etc\/.*\)$$/\1/p' \
	  > debian/tmp-henplus/DEBIAN/conffiles
	test -s debian/tmp-henplus/DEBIAN/conffiles || rm -f debian/tmp-henplus/DEBIAN/conffiles
	yada rebuild control
	yada generate substvars henplus
	umask 022 && dpkg-gencontrol -isp -phenplus -Pdebian/tmp-henplus

# Build package files

.PHONY: binary binary-arch binary-indep
binary: binary-arch binary-indep
binary-arch: binary-arch-any

.PHONY: binary-arch-any
binary-arch-any:
binary-indep: \
	binary-package-henplus

.PHONY: binary-package-henplus
binary-package-henplus: check-root debian/tmp-henplus/DEBIAN/control
	@[ -f $(shell which yada) -a -f debian/rules ]
	chown -R 0.0 debian/tmp-henplus
	chmod -R u=rwX,go=rX debian/tmp-henplus
	@if [ -d debian/tmp-henplus/usr/doc/henplus ]; then \
	  echo "*** Yada warning: /usr/doc/henplus should be /usr/share/doc/henplus";\
	fi
	dpkg-deb --build debian/tmp-henplus ..

.PHONY: check-root
check-root:
	@[ `id -u` = 0 ] || (echo "You must be root to do this!"; false)

debian/packages-tmp: debian/packages debian/java-common.packages debian/java-common.packages debian/java-common.packages
	yada rebuild packages

## Clean up afterwards

.PHONY: clean clean-install-tree clean-build

clean: clean-install-tree clean-build debian/control debian/rules
	rm -f debian/packages-tmp debian/packages-tmp-new debian/packages-tmp-include

clean-build:
	@[ -f $(shell which yada) -a -f debian/rules ]
	rm -f debian/build-stamp debian/build-arch-stamp debian/build-indep-stamp
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export SOURCE="henplus" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'export JAVA_HOME=/usr/lib/jvm/java-gcj';\
	echo -E 'unset JAVA JAVAC JAVACMD CLASSPATH';\
	echo -E '';\
	echo -E 'ANT_OPTS="-Dbuild.compiler=extJavac"';\
	echo -E '';\
	echo -E 'ANT="ant $$ANT_OPTS"';\
	echo -E '';\
	echo -E 'LC_ALL=C $$ANT clean';\
	echo -E '';\
	echo -E 'rm -f lib/*.jar') | /bin/bash
	yada unpatch
	rm -rf debian/tmp

clean-install-tree: debian/rules
	@[ -f $(shell which yada) -a -f debian/rules ]
	rm -f debian/install-tree-stamp
	rm -rf debian/tmp-* debian/files* debian/substvars debian/shlibs.local debian/ucf
